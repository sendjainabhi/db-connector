accelerator:
  displayName: sample-db-connector
  description: sample-db-connector
  iconUrl: https://images.freecreatives.com/wp-content/uploads/2015/05/smiley-559124_640.jpg
  tags:
    - java
    - spring
    - web
    - jpa
    - postgresql
    - tanzu

  options:
    - name: artifactId
      inputType: text
      defaultValue: "customer-profile"
      label: Module artifact name
      required: true
    - name: groupId
      inputType: text
      defaultValue: "com.example"
      label: Module group name
      required: true
    - name: packageName
      inputType: text
      defaultValue: "com.example.customerprofile"
      label: Module root package
      required: true
    - name: buildTool
      label: Build Tool
      inputType: select
      required: true
      defaultValue: maven
      choices:
        - value: maven
          text: Maven (https://maven.apache.org/)
        - value: gradle
          text: Gradle (https://gradle.org/)
    - name: exposeOpenAPIEndpoint
      label: Expose OpenAPI endpoint?
      dataType: boolean
      defaultValue: false
    - name: apiSystem
      label: System API Belongs To
      inputType: text
      required: true
      defaultValue: "profile-management"
      dependsOn:
        name: exposeOpenAPIEndpoint
    - name: apiOwner
      label: Owner of API
      inputType: text
      required: true
      defaultValue: "customer-relations-department"
      dependsOn:
        name: exposeOpenAPIEndpoint
    - name: apiDescription
      label: API Description
      inputType: text
      required: true
      defaultValue: "Manage customer profiles"
      dependsOn:
        name: exposeOpenAPIEndpoint
    - name: databaseType
      inputType: select
      label: Database type to use
      choices:
        - value: "postgres"
          text: PostgreSQL
        - value: "mysql"
          text: MySQL
      defaultValue: "postgres"
      required: true
  imports:
    - name: spring-boot-postgresql
      expose:
        - name: databaseName
          dependsOn:
            name: databaseType
            value: postgres
    - name: spring-boot-mysql
      expose:
        - name: databaseName
          dependsOn:
            name: databaseType
            value: mysql
    - name: spring-boot-database
      expose:
        - name: databaseMigrationTool
        - name: databaseIntegrationTestType
    - name: live-update
      expose:
        - name: liveUpdateIDESupport
          dependsOn:
            name: buildTool
            value: "maven"
    - name: tap-workload
    - name: build-wrapper-maven
    - name: build-wrapper-gradle

engine:
  let:
    - name: packageDirectory
      expression: '#packageName.replace(".", "/")'
    - name: workloadResourceName
      expression: "#artifactId.toLowerCase()"
    - name: databaseResourceName
      expression: "#databaseName.toLowerCase()"
  chain:
    # Maven is selected
    - condition: "#buildTool == 'maven'"
      exclude: ["settings.gradle.kts", "build.gradle.kts"]
      merge:
        - include: ["**"]
          exclude: ["pom.xml", "README.md"]
        - include: ["pom.xml"]
          chain:
            - type: ReplaceText
              substitutions:
                - text: "<groupId>com.vmware.tap.accelerators</groupId>"
                  with: "'<groupId>' + #groupId + '</groupId>'"
        - include: ["README.md"]
          chain:
            - type: ReplaceText
              regex:
                pattern: "--- StartGradle[\\s\\S]+?--- EndGradle"
                with: "''"
            - type: ReplaceText
              regex:
                pattern: "--- StartMaven\\s|--- EndMaven\\s"
                with: "''"
    # end of the Maven specific part

    # Gradle is selected
    - condition: "#buildTool == 'gradle'"
      exclude: ["pom.xml"]
      merge:
        - include: ["**"]
          exclude: ["build.gradle.kts", "README.md"]
        - include: ["build.gradle.kts"]
          chain:
            - type: ReplaceText
              substitutions:
                - text: 'group = "com.vmware.tap.accelerators"'
                  with: '''group = "'' + #groupId + ''"'''
        - include: ["README.md"]
          chain:
            - type: ReplaceText
              regex:
                pattern: "--- StartMaven[\\s\\S]+?--- EndMaven"
                with: "''"
            - type: ReplaceText
              regex:
                pattern: "--- StartGradle\\s|--- EndGradle\\s"
                with: "''"
    # end of the Gradle specific part

    # OpenAPI Endpoint Auto-registration
    - merge:
        - include: ["**"]
          exclude:
            ["config/workload-basic.yaml", "config/workload-api-provider.yaml"]
        - include: ["config/workload-api-provider.yaml"]
          condition: "#exposeOpenAPIEndpoint"
          chain:
            - type: ReplaceText
              condition: "#exposeOpenAPIEndpoint"
              substitutions:
                - text: "SYSTEM_VAL"
                  with: "#apiSystem"
                - text: "OWNER_VAL"
                  with: "#apiOwner"
                - text: "DESCRIPTION_VAL"
                  with: "#apiDescription"
            - type: RewritePath
              rewriteTo: "'config/workload.yaml'"
        - include: ["config/workload-basic.yaml"]
          condition: "!#exposeOpenAPIEndpoint"
          chain:
            - type: RewritePath
              rewriteTo: "'config/workload.yaml'"
    # End OpenAPI Endpoint Auto-registration

    # Workload Resource name and database resource name
    - merge:
        - exclude: ["config/**"]
        - include: ["config/workload.yaml"]
          chain:
            - type: ReplaceText
              substitutions:
                - text: "rest-service-db"
                  with: "#workloadResourceName"
                - text: "customer-database"
                  with: "#databaseResourceName"
    # End Workload Resource name

    - merge:
        - type: InvokeFragment
          reference: spring-boot-database
        - include: ["**"]
      onConflict: UseFirst

    - condition: "#databaseType == 'postgres'"
      merge:
        - type: InvokeFragment
          reference: spring-boot-postgresql
        - include: ["**"]
      onConflict: UseFirst

    - condition: "#databaseType == 'mysql'"
      merge:
        - type: InvokeFragment
          reference: spring-boot-mysql
        - include: ["**"]
      onConflict: UseFirst

    - condition: "#buildTool == 'maven'"
      merge:
        - type: InvokeFragment
          reference: live-update
        - include: ["**"]
      onConflict: UseFirst

    - merge:
        - type: InvokeFragment
          reference: tap-workload
        - include: ["**"]
      onConflict: UseFirst

    - merge:
        - exclude: ["**/*.java"]
        - include: ["**/*.java"]
          let:
            - name: packageDirectory
              expression: '#packageName.replace(".", "/")'
          chain:
            - type: ReplaceText
              substitutions:
                - text: "com.vmware.tap.accelerators.restservicedb"
                  with: "#packageName"
            - type: RewritePath
              regex: "src/(?<sourceset>.*)/java/(?<currentpackage>.*/)restservicedb(?<untouchedpath>.*)"
              rewriteTo: "'src/' + #sourceset + '/java/' + #packageDirectory + '/' + #untouchedpath"

    - merge:
        - include: ["**/*.jar"]
        - exclude: ["**/*.jar"]
          chain:
            - type: ReplaceText
              substitutions:
                - text: "rest-service-db"
                  with: "#artifactId"

    - merge:
        - include: ["**"]
        - type: InvokeFragment
          condition: "#buildTool == 'maven'"
          reference: build-wrapper-maven
        - type: InvokeFragment
          condition: "#buildTool == 'gradle'"
          reference: build-wrapper-gradle

    # DATABASE.md
    - merge:
        - exclude: ["DATABASE.md"]
        - condition: "#databaseType == 'mysql'"
          include: ["DATABASE.md"]
          chain:
            - type: ReplaceText
              regex:
                pattern: "Postgres"
                with: "'MySQL'"
            - type: ReplaceText
              regex:
                pattern: "PostgreSQL"
                with: "'MySQL'"
            - type: ReplaceText
              regex:
                pattern: "postgresql"
                with: "'mysql'"
            - type: ReplaceText
              regex:
                pattern: "postgres"
                with: "'mysql'"
            - type: ReplaceText
              substitutions:
                - text: "customer-database"
                  with: "#databaseResourceName"
            - type: ReplaceText
              regex:
                pattern: "\\[local\\]"
                with: |
                  'For local development a `docker compose` database instance will be started using `spring-boot-docker-compose`. 
                  '
        - condition: "#databaseType == 'postgres'"
          include: ["DATABASE.md"]
          chain:
            - type: ReplaceText
              substitutions:
                - text: "customer-database"
                  with: "#databaseResourceName"
            - type: ReplaceText
              regex:
                pattern: "\\[local\\]"
                with: |
                  'For local development a `docker compose` database instance will be started using `spring-boot-docker-compose`. 
                  '
    # end of DATABASE.md
    - type: Provenance
